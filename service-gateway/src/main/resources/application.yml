server:
  port: 8765

eureka:
  instance:
# Indicates how often (in seconds) the eureka client needs to send heartbeats to eureka server to indicate that it is still alive. If the heartbeats are not received for the period specified in leaseExpirationDurationInSeconds, eureka server will remove the instance from its view, there by disallowing traffic to this instance.
    leaseRenewalIntervalInSeconds: 60
# Indicates the time in seconds that the eureka server waits since it received the last heartbeat before it can remove this instance from its view and there by disallowing traffic to this instance. Setting this value too long could mean that the traffic could be routed to the instance even though the instance is not alive. Setting this value too small could mean, the instance may be taken out of traffic because of temporary network glitches.This value to be set to atleast higher than the value specified in leaseRenewalIntervalInSeconds.
    leaseExpirationDurationInSeconds: 90
    hostname: ${DOCKER_MACHINE_IP}
  client:
    service-url:
      defaultZone: http://${DOCKER_MACHINE_IP}:${EUREKA_PORT}/eureka/
    healthcheck:
      enabled: true
    lease:
      duration: 5

spring:
  application:
    name: service-gateway
  sleuth:
    sampler:
      percentage: 1.0
  zipkin:
    baseUrl: http://${DOCKER_MACHINE_IP}:${ZIPKIN_PORT}

management:
  security:
    enabled: false

ribbon:
  ConnectTimeout: 500000
  ReadTimeout: 6000000
  eureka:
    enabled: true

hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: THREAD
          thread:
            timeoutInMilliseconds: 6000000

zuul:
  prefix: /api
  routes:
    account:
      path: /addressbook/**
      serviceId: service-addressbook
    customer:
      path: /people/**
      serviceId: service-people

logging:
  file: /logs/${spring.application.name}.log
  level:
    org:
      springframework:
        boot:
          autoconfigure:
            logging: DEBUG